const tocOptions={title:"Contents",headings:"h2, h3"};function plugin(e,t){let n=t.config.toc;e.mounted(()=>{buildNav()}),e.doneEach(()=>{removeTOC(),buildTOC(n),highlightTOC(n),syncTOCScrollToViewedContent(),window.scrollTo(0,0)})}function buildNav(){let e=document.createElement("aside");e.classList.add("nav");let t=document.querySelector(".content");t.insertBefore(e,t.children[0])}function removeTOC(){let e=document.querySelectorAll(".nav .toc-container");e.forEach(e=>{e.parentNode.removeChild(e)})}function buildTOC(e){let t=document.createElement("ul"),n=t,i=null,l="";getDisplayedHeadingLevels(e).forEach(e=>{l+=".markdown-section>h"+e+", "}),l=l.slice(0,l.length-2);let r=getHeadings(l);if(r.reduce((e,t)=>{let l=getLevel(t),r=l-e;return r>0&&(n=createUList(i,r)),r<0&&(n=jumpBack(n,-(2*r))),i=createListItem(t,n),l},getLevel(e.headings)),!t.innerHTML)return;let c=createTOCContainer(e.title,t),o=document.querySelector("section.content aside.nav");o.appendChild(c)}function getDisplayedHeadingLevels(e){return e.headings.match(/\d/g)}function getHeadings(e){return Array.from(document.querySelectorAll(e))}function getLevel(e){let t=null;return e instanceof Element&&(t=e.nodeName.match(/\d/g)),"string"==typeof e&&(t=e.match(/\d/g)),t?Math.min.apply(null,t):1}function createUList(e,t){for(;t;)e=e.appendChild(document.createElement("ul")),--t&&(e=e.appendChild(document.createElement("li")));return e}function jumpBack(e,t){for(;t--;)e=e.parentElement;return e}function createListItem(e,t){let n=document.createElement("li"),i=document.createElement("a");i.innerHTML=e.firstChild.innerHTML,i.href=e.firstChild.href;let l=i.querySelector("span");return l.title=l.innerText,t.appendChild(n).appendChild(i),n}function createTOCContainer(e,t){let n=document.createElement("p");n.innerHTML=e,n.classList.add("title");let i=document.createElement("div");return i.classList.add("toc-container"),i.appendChild(n),i.appendChild(t),i}function highlightTOC(e){let t=document.querySelectorAll("article.markdown-section > *");t.forEach(e=>{createDisplayedObserver().observe(e)}),window.addEventListener("scroll",t=>{getDisplayedHeadingLevels(e).forEach(e=>{let t=document.querySelectorAll(".markdown-section>h"+e);t.forEach(e=>{let t=getTocHeadingAnchor(e);if(isDisplayed(e)){t.classList.add("active");return}isContentViewed(e)?t.classList.add("active"):t.classList.remove("active")})})})}function createDisplayedObserver(){return new IntersectionObserver(e=>{e.forEach(e=>{let t=e.target,n=e.intersectionRatio>0;n?t.classList.add("displayed"):t.classList.remove("displayed")})})}function getTocHeadingAnchor(e){let t=e.querySelector("a").href,n=document.querySelector('.toc-container li a[href="'+t+'"]');return n}function isDisplayed(e){return!!e.classList.contains("displayed")}function isContentViewed(e){let t=e.nextElementSibling;for(;t;){if(!isHeading(t)&&isDisplayed(t)||isHeading(t)&&getLevel(t)>getLevel(e)&&isDisplayed(t))return!0;if(isHeading(t)&&getLevel(t)<=getLevel(e))break;t=t.nextElementSibling}return!1}function isHeading(e){return e instanceof HTMLHeadingElement}function syncTOCScrollToViewedContent(){let e=document.querySelector(".toc-container");e&&window.addEventListener("scroll",t=>{let n=window.document.documentElement.scrollHeight,i=window.document.documentElement.clientHeight,l=window.document.documentElement.scrollTop,r=e.scrollHeight,c=e.clientHeight;e.scrollTop=(r-c)*(l/(n-i))})}window.$docsify.toc=Object.assign(tocOptions,window.$docsify.toc),window.$docsify.plugins=[].concat(window.$docsify.plugins,plugin);